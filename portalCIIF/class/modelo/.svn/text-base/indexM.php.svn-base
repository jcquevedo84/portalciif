<?php
	/**
	*nombreaplicacion indexM
	*
	*Clase Modelo de la Pagina index.php
	*En esta clase se encuentran todos los modelos de datos y conexiones a base de datos realizadas desde la pagina info.php
	*@copyright Instituo de Ingenieria CPDI
	*@author Ing. Juan Carlos Rodriguez
	*@version 1.0
	*@package indexM
	*
	*/
	class indexM 
	{
		/**
		* string que guarda la dirección del servidor donde se encuentra la aplicación.
		* @var string $direccionS
		* @access public
		*/
		var $direccionS="";
	    /**
		* array que guarda las variables para conectarse a la base de datos.
		* @var array $varGlobalBD
		* @access public
		*/
		var $varGlobalBD="";
	    /**
		* string que guarda la dirección ip del servidor donde corre la aplicación.
		* @var string $direccion
		* @access public
		*/
		var $direccion="";
		 /**
		* string que guarda ruta dpnde se encuentran las consuktas predefinidas de base de datosn.
		* @var string $rutaConsulta
		* @access public
		*/
		var $rutaConsulta="";
		/**
		*
		*Object que representa las variables de session que se captura en la aplicación.
		*
		*@global Object $objSesion
		*@name $objSesion
		*/
		var $objS="";
		/**
		*
		*array  que representa las variables de configuración de la aplicación.
		*
		*@global array $varGlobal
		*@name $varGlobal
		*/
		var $varGlobal="";
		/**
		*
		*array  que representa las variables de una pagina.
		*
		*@global array $varPag
		*@name $varPag
		*/
		var $varPag=array();
		/**
		*
		*Constructor
		*
		*Esta Función asigna parametros a las variables miembros de la clase.
		*
		*@param string $direccion (Obligatorio) Es la dirección IP donde se encuentra corriendo la aplicación.
		*@param string $direccionS (Obligatorio) Es el URL completo de la aplicación sin inclui la pagina que esta correindo..
		*@param array $varGlobalsBD (Obligatorio) Es un array que contiene toda la información necesaria para la conexion a la base de datos.
		*@param string $rutaConsulta (Obligatorio) Es la ruta donde se encuentras las consultas predefinidas en la aplicación.
		*@return void
		*/
		function indexM($objS="",$direccion="",$direccionS="",$varGlobalsBD="",$rutaConsulta="",$varGlobal="",$varPag="")
		{
			if(!empty($direccion))
				$this->direccion=$direccion;
			else 
				$this->direccion=varConf::getServidor("direccionIP");
			if(!empty($direccionS))
				$this->direccionS=$direccionS;
			else 
				$this->direccionS=varConf::getServidor("direccionServidor");;
			if(!empty($varGlobalsBD))
				$this->varGlobalsBD=$varGlobalsBD;
			else 
				$this->varGlobalsBD=varConf::getBaseDatosPgsql();
			if(!empty($rutaConsulta))
				 $this->rutaConsulta=$rutaConsulta;
			else 
				$this->rutaConsulta=varConf::getRutasAccesoBDConsultas("consulta");
			if(!empty($objS))
				$this->objS=$objS;
			if(!empty($varPag))
				 $this->varPag=$varPag;
			else 
				$this->varPag=varConf::getAtributosPag(substr(__CLASS__,0,strlen(__CLASS__)-1));
		}
		/**
		*
		*pagina
		*
		*Es la encargada de crear la estructura de una pagina
		*@return string $html es Todo el codigo HTML que se va a desplegar en la pagina
		*/
		function pagina($objPag="")
		{
			$html="";
			$html.=$objPag->flibHtmHead();
			$html.=$objPag->getCabecera();
			$html.=$objPag->getContenido();
			$html.=$objPag->getPie();
			$html.=$objPag->flibCierre();
			return $html;	
		}
		/**
		*
		*actualizar
		*
		*Esta Función actualiza la pantalla del usuario en dependencia del evento del menu izquierdo.
		*
		*@param integer $tipo (Obligatorio) La variable controla que clase se va a activar.
		*@param integer $evento (Obligatorio) La Controla que evento se va a activar dentro de la clase.
		*@param Object $respuesta (Obligatorio) Es el encargado de gestionar el xajax
		*@return Object $respuesta (Obligatorio) Es el gestionador el xajax (con los cambios realizados)
		*/
	    function actualizar($tipo="", $evento="",$respuesta)
		{
			$datos=$this->extraeDatosEvento($tipo);
			require_once("../class/modelo/".$datos["modelo"].".php");
			$model= new $datos["modelo"]($this->objError,$this->objSesion);
			//1 para crear
			if($evento==1)
			{
				require_once("../class/vista/".$datos["vista"].".php");
				$view= new $datos["vista"]($this->objError,$this->objSesion);
				$salida=$model->gestionaevento($evento,$view);
			}
			//2 para gestiona lista los registros y aparecen opciones de activar, desactivar, ver, modificar.
			elseif($evento==2)
			{
				$view=new indexV($this->objError);
				$salida=$model->gestionaevento($evento,$view);
			}
			//echo $salida;
			$respuesta->addAssign("detalles_contenido","innerHTML",$salida);
			$respuesta->addAssign("titulo_contenido","innerHTML",htmlentities($datos["titulo"]));
			return $respuesta;
		}
		/**
		*
		*extraeDatosEvento
		*
		*Esta función resorna los datos asociados a la clase que se va a incluir.
		*
		*@param integer $tipo (Obligatorio) La variable controla que clase se va a activar.
		*@return array $arreglo contiene los datos de la clase que se va a activar (nombre de la vita, modelo, titulo)
		*/
		function extraeDatosEvento($tipo)
		{		                          
			$arreglo=array();
			switch ($tipo)
			{
				Case 0:
					$arreglo["vista"]="empresaV";
					$arreglo["modelo"]="empresaM";
					$arreglo["titulo"]="Empresa";
					break;
				Case 1:
					$arreglo["vista"]="upsV";
					$arreglo["modelo"]="upsM";
					$arreglo["titulo"]="UPS";
					break;
				Case 2:
					$arreglo["vista"]="comercioV";
					$arreglo["modelo"]="comercioM";
					$arreglo["titulo"]="Comercio";
					break;
				Case 3:
					$arreglo["vista"]="conceptoV";
					$arreglo["modelo"]="conceptoM";
					$arreglo["titulo"]="Concepto";
					break;
				Case 4:
					$arreglo["vista"]="presentacionV";
					$arreglo["modelo"]="presentacionM";
					$arreglo["titulo"]="Presentación";
					break;
				Case 5:
					$arreglo["vista"]="productoresV";
					$arreglo["modelo"]="productoresM";
					$arreglo["titulo"]="Productores";
					break;
				Case 6:
					$arreglo["vista"]="productoV";
					$arreglo["modelo"]="productoM";
					$arreglo["titulo"]="Producto";
					break;
				Case 7:
					$arreglo["vista"]="operacionV";
					$arreglo["modelo"]="operacionM";
					$arreglo["titulo"]="Operación";
					break;
				Case 8:
					$arreglo["vista"]="juntadirV";
					$arreglo["modelo"]="juntadirM";
					$arreglo["titulo"]="Junta Directiva";
					break;
				Case 9:
					$arreglo["vista"]="enlacesestatV";
					$arreglo["modelo"]="enlacesestatM";
					$arreglo["titulo"]="Enlaces Estategicos";
					break;
				Case 10:
					$arreglo["vista"]="registrouserV";
					$arreglo["modelo"]="registrouserM";
					$arreglo["titulo"]="Registro de Usuario";
					break;
			}
		    return $arreglo;
		}
		/**
		*
		*guardar
		*
		*Esta Función guarda los datos introducidos por el usuario cuando pulsa la opción guardar en el evento crear.
		*
		*@param array $form (Obligatorio) La variable contiene los datos del formulario.
		*@param integer $pagina (Obligatorio) La Controla que evento se va a activar dentro de la clase.
		*@param Object $respuesta (Obligatorio) Es el encargado de gestionar el xajax
		*@return Object $respuesta (Obligatorio) Es el gestionador el xajax (con los cambios realizados)
		*/
		function guardar($form="",$pagina="",$respuesta="")
		{
			$datos=$this->extraeDatosEvento($pagina);
			require_once("../class/modelo/".$datos["modelo"].".php");
			$model= new $datos["modelo"]($this->objError,$this->objSesion);
			$salida=$model->guardar($form);
			$respuesta->addScript("alert('".$salida."')");
			$nuevapantalla="";
			$respuesta->addAssign("detalles_contenido","innerHTML",$nuevapantalla);
			return $respuesta;
		}
		/**
		*
		*guardar
		*
		*Esta Función guarda los datos introducidos por el usuario cuando pulsa la opción guardar en el evento crear.
		*
		*@param array $id (Obligatorio) Es el identificador del registro que se activará o desactivara.
		*@param integer $pagina (Obligatorio) La Controla que evento se va a activar dentro de la clase.
		*@param integer $est (Obligatorio) Es el estado que se pondra en registro 0 inactivo 1 activo.
		*@param Object $respuesta (Obligatorio) Es el encargado de gestionar el xajax
		*@return Object $respuesta (Obligatorio) Es el gestionador el xajax (con los cambios realizados)
		*/
		function cambiaEstado($id="",$pagina="",$est="",$respuesta="")
		{
			$datos=$this->extraeDatosEvento($pagina);
			require_once("../class/modelo/".$datos["modelo"].".php");
			$model= new $datos["modelo"]($this->objError,$this->objSesion);
			$salida=$model->actdes($id,$est);
			$respuesta->addScript("alert('$salida')");
			$view=new indexV($this->objError);
			$salida=$model->gestionaevento(2,$view);
			$respuesta->addAssign("detalles_contenido","innerHTML",$salida);
			return $respuesta;
		}
		/**
		*
		*guardar
		*
		*Esta Función Modifica los datos introducidos por el usuario cuando pulsa la opción modificar en el evento modificar (gestionar).
		*
		*@param array $form (Obligatorio) La variable contiene los datos del formulario.
		*@param integer $pagina (Obligatorio) La Controla que evento se va a activar dentro de la clase.
		*@param $id $pagina (Obligatorio) Es el valor unico del registro que se va a modificar.
		*@param Object $respuesta (Obligatorio) Es el encargado de gestionar el xajax
		*@return Object $respuesta (Obligatorio) Es el gestionador el xajax (con los cambios realizados)
		*/
		function modificar($form="",$pagina="",$id="",$respuesta="")
		{		   
			$datos=$this->extraeDatosEvento($pagina);
			require_once("../class/modelo/".$datos["modelo"].".php");
			$model= new $datos["modelo"]($this->objError,$this->objSesion);
			$html=$model->modificar($form,$id);
			$respuesta->addScript("alert('$html')");
			$respuesta->addScript("window.close()");
			return $respuesta;
		}
		/**
		*
		*verdetalle
		*
		*Esta Función visualiza en una nueva ventana los datos de del registro seleccionado.
		*
		*@param array $id (Obligatorio) Contiene la variable unica del registro que se va a visualizar o modificar.
		*@param integer $pagina (Obligatorio) La Controla que evento se va a activar dentro de la clase.
		*@param $evento $evento (Obligatorio) Es el evento que se va ha generar 1 si es solo visualización (se bloque los campos) 2 si es modificación (no se bloquean los datos)
		*@param Object $respuesta (Obligatorio) Es el encargado de gestionar el xajax
		*@param Object $xajax (Obligatorio) Es el obejto  xajax para registra las funcion controladora.
		*@return Object $respuesta (Obligatorio) Es el gestionador el xajax (con los cambios realizados)
		*/
		function verdetalle($id="",$pagina="",$evento="",$respuesta="",$xajax)
		{
			$datos=$this->extraeDatosEvento($pagina);
			require_once("../class/modelo/".$datos["modelo"].".php");
			$model= new $datos["modelo"]($this->objError,$this->objSesion);
			require_once("../class/vista/".$datos["vista"].".php");
			$view= new $datos["vista"]($this->objError,$this->objSesion);
			$pagina=new pagina("index",$this->objError);
			$pagina->setVar("javaScriptGeneral","window.setTimeout(function () { if (!xajaxLoaded) { alert('Error: the xajax Javascript file could not be included. Perhaps the URL is incorrect?\nURL: ../librerias/xajax/xajax_js/xajax.js'); } }, 6000);");
			$pagina->setVar("titulo","Portal  - Modificar ");
			$pagina->setVar("ficEstilos","estilo.css;contenidos.css;");
			$html=$model->detalle($evento,$id,$view,$this,$evento);
			$pagina->setHTML($html);
			$pagina->setVar("javaScriptGeneral",$xajax->getJavascript("../librerias/xajax/"));
			$html2.=$pagina->flibHtmHead();
			$html2.=$pagina->getHTML();
			$html2.=$pagina->flibCierre();
			$html2=addslashes($html2);
			$html2 = eregi_replace("[\n|\r|\n\r]", ' ', $html2);
			$respuesta->addScript( "abrirVentana(\"$html2\",'685','500')");
			return $respuesta;
		}
		function llenaMunParr($pagina="",$idestado="",$div="",$idmunicipio="",$evento="")
		{
			$resul="";
			$respuesta = new xajaxResponse();
			$datos=$this->extraeDatosEvento($pagina);
			require_once("../class/vista/".$datos["vista"].".php");
			$view= new $datos["vista"]($this->objError,$this->objSesion);
			if($div=="divparroquia")
			{
				if(!empty($idestado) and !empty($idmunicipio))
					$resul=$this->parroquiaD($idestado,$idmunicipio);
				if(!empty($resul))
					$salida=$view->llenarCombo("parroquia",$resul);
			}
			else
			{
				if(!empty($idestado))
				{
					$resul=$this->municipioD($idestado);
					$salida=$view->llenarCombo("municipio",$resul,"onchange=\"xajax_llenaMunParr($pagina,document.getElementById('estado').options[document.getElementById('estado').selectedIndex].value,'divparroquia',document.getElementById('municipio').options[document.getElementById('municipio').selectedIndex].value)\"");
				}
				else
				{
					$salida=$view->llenarCombo("municipio",$resul,"onchange=\"xajax_llenaMunParr($pagina,document.getElementById('estado').options[document.getElementById('estado').selectedIndex].value,'divparroquia',document.getElementById('municipio').options[document.getElementById('municipio').selectedIndex].value)\"");
					$salida1=$view->llenarCombo("parroquia",$resul);
					$respuesta->addAssign($div,"divparroquia",$salida1);
				}
			}
			$respuesta->addAssign($div,"innerHTML",$salida);
			return $respuesta;
		}
		function municipioD($idestado="")
		{
			$resul="";
			$objPG= new consultas(__FILE__,__CLASS__,__FUNCTION__);
			$resul=$objPG->selecion("0,".$idestado.";",__LINE__);
			unset($objPG);
			return 	$resul['resul'];
		}
		function parroquiaD($idestado="",$idmunicipio)
		{
			$resul="";
			$objPG= new consultas(__FILE__,__CLASS__,__FUNCTION__);
			$resul=$objPG->selecion("0,".$idestado.";1,".$idmunicipio.";",__LINE__);
			unset($objPG);
			return 	$resul['resul'];
		}
		/**
		*
		*pagina
		*
		*Es la encargada logear al usuario que va a entrar a la aplicación y muestra la interface deacuerdo a su perfil
		*@param string $usuario (Obligatorio) en el login del usuario
		*@param string $pass (Obligatorio) Es el pasword del usuario
		*@return string $html es Todo el codigo HTML que se va a desplegar en la pagina
		*/
		function consultarLogin($usuario=" ", $pass=" ")
		{
			//instanciamos el objeto para generar la respuesta con ajax
			/*$respuesta = new xajaxResponse();
			$resultadoLogin="";
			$objPG= new consultas("","admonM","consultar_usuario_pass");
			$resultadoLogin=$objPG->selecion("0,".$usuario.";1,".$pass.";",__LINE__);
			unset($objPG);
			if($resultadoLogin["resul"]!= NULL)
		    {
		    	//print_r($resultadoLogin);
		    	$this->user= new usuario($this->objError);
		 		$this->user->setNombre($resultadoLogin["resul"][1][2]);
		 		$this->user->setLogin($resultadoLogin["resul"][1][1]);
		 		$this->user->setTipoUsuario($resultadoLogin["resul"][1][3]);
		 		$this->user->setInstitucion($resultadoLogin["resul"][1][4]);
		 		$this->user->setDepartamento($resultadoLogin["resul"][1][5]); 
		 		$this->user->setEmail($resultadoLogin["resul"][1][6]);
		 		$this->user->setCodInstitucion($resultadoLogin["resul"][1][7]);
		 		$this->user->setCodDepartamento($resultadoLogin["resul"][1][8]); 
		 		$this->objSesion->setVarSession("user",$this->user);
	 			$nombre="index";
	 			//Se crea el objeto  pagina
				$this->objPaginas = new pagina($nombre,$this->objError);
				$this->objPaginas->setVar("banner", varConf::getRutasAccesoImagen("imagenes").'sistema/principal.jpg');
			 	//Se crea el objeto model 
				$this->model= new principalM($this->objError,$this->objSesion);
				//se crea el objeto  vista
				$this->view=new principalV($this->objError);
				$this->objPaginas->setCabecera($this->view->cabecera());
				$this->objPaginas->setHTML($this->view->principal($this->user->getNombre(),$this->user->getTipoUsuario()));
				$this->objPaginas->setPie($this->view->pie());
				$this->objPaginas->setContenido($this->view->menu($this->view->baner($this->objPaginas->getVar("banner"),basename($menusec,".php")),basename($this->objPaginas->getVar("nombre"),".php"))." ".$this->objPaginas->setDivContenido($this->objPaginas->getHTML(),$this->view->divCont));
				$respuesta->addAssign("index","innerHTML",$this->model->pagina($this->objPaginas));
				
	 			return $respuesta;
		    }
		    else 
		    {
		    	$respuesta->addAssign("msg_entrar","innerHTML","Nombre de usuario y/o contrase&ntilde;a inv&aacute;lido");	
		    	return $respuesta;
		    }*/
			$respuesta = new xajaxResponse();
			$view=new indexV();
			$resultadoLogin="";
			$objPG= new consultas("",__CLASS__,"consultarLogin");
			$resultadoLogin=$objPG->selecion("0,".$usuario.";1,".$pass.";",__LINE__);
			unset($objPG);
			if($resultadoLogin["resul"]!= NULL)
		    {
		    	$this->user= new usuario();
		 		$this->user->setNombre($resultadoLogin["resul"][1][4]);
		 		$this->user->setLogin($resultadoLogin["resul"][1][2]);
		 		$this->user->setTipoUsuario($resultadoLogin["resul"][1][5]);
		 		$this->user->setInstitucion($resultadoLogin["resul"][1][6]);
		 		//$this->user->setDepartamento($resultadoLogin["resul"][1][5]); //falta el codigo del ups
		 		$this->user->setEmail($resultadoLogin["resul"][1][7]);
		 		$this->objS->setVarSession("user",$this->user);
		 		//print_r($_SESSION);
		    	$respuesta->addAssign("detalle_index","innerHTML",$view->principal());	
		    }
			else 
			{
				$respuesta->addAssign("msg_entrar","innerHTML","Nombre de usuario y/o contrase&ntilde;a inv&aacute;lido");
			}
			return $respuesta;
		}
		function recordarPass()
	    {
	    	//instanciamos el objeto para generar la respuesta con ajax
			$respuesta = new xajaxResponse();
			$view=new recordarPassV();
			//$xajax = new xajax();
			$nombre="recordarpass";
			$pagina=new pagina($nombre,$this->objError);//OJO VERIFICAR
			$view->setPaginaSig(varConf::getServidor("direccionServidor").$pagina->getVar("nombre"));
			$html=$view->principal();
			$pagina->setHTML($html);
			$html2.=$pagina->flibHtmHead();
			$html2.=$pagina->getHTML();
			$html2.=$pagina->flibCierre();
			$html2=addslashes($html2);
			$html2 = eregi_replace("[\n|\r|\n\r]", ' ', $html2);
			$respuesta->addScript( "abrirVentana(\"$html2\",'500','250')");
			return $respuesta;
	    }
	}
?>